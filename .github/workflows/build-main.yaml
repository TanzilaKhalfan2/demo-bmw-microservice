name: Build and Push Docker Image

on:
  push:
    branches:
      - develop
  workflow_dispatch:

env:
  REGISTRY_NAME: tanzilakhalfan

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Extract repository name
      id: vars
      run: echo "REPO_NAME=$(echo ${{ github.repository }} | awk -F '/' '{print $2}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest requests yq

    - name: Lint code
      run: |
        flake8 .

    - name: Run tests
      run: |
        python -m unittest discover -s app/unit-tests -p "test_*.py"
    
    - name: Check yq version
      run: yq --version

    - name: Update Helm values.yaml
      run: |
        yq eval '.image.repository = "\(env(REGISTRY_NAME))/\(env(REPO_NAME))"' -i charts/demo-bmw-microservice/values.yaml
        yq eval '.image.tag = "\(env(GITHUB_RUN_NUMBER))"' -i charts/demo-bmw-microservice/values.yaml
      shell: /usr/bin/bash -e {0}
      env:
        REGISTRY_NAME: ${{ env.REGISTRY_NAME }}
        REPO_NAME: ${{ env.REPO_NAME }}
        GITHUB_RUN_NUMBER: ${{ github.run_number }}
    
    - name: List updated values.yaml
      run: |
        cat charts/demo-bmw-microservice/values.yaml

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PAT }}

    - name: Build and push Docker images
      uses: docker/build-push-action@v6.9.0
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ env.REGISTRY_NAME }}/${{ env.REPO_NAME }}:${{ github.run_number }}

  # helmpackage:
  #   # needs: build
  #   permissions:
  #     contents: write
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3
  #       with:
  #         fetch-depth: 0
      
  #     - name: Extract repository name
  #       id: vars
  #       run: echo "REPO_NAME=$(echo ${{ github.repository }} | awk -F '/' '{print $2}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

  #     - name: Configure Git
  #       run: |
  #         git config user.name "$GITHUB_ACTOR"
  #         git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

  #     - name: Install Helm
  #       uses: azure/setup-helm@v4
  #       env:
  #         GITHUB_TOKEN: "${{ secrets.GIT_HUB_TOKEN }}"
      
  #     - name: Package Helm chart
  #       run: |
  #         VERSION=${{ github.run_number }}

  #         rm -rf .cr-release-packages
  #         mkdir -p .cr-release-packages
  #         helm package charts/${{ env.REPO_NAME }} --app-version=${VERSION} --version=${VERSION} --destination=.cr-release-packages

  #     - name: Run chart-releaser
  #       uses: helm/chart-releaser-action@v1.6.0
  #       with:
  #         skip_packaging: true
  #         skip_existing: true
  #       env:
  #         CR_TOKEN: "${{ secrets.GIT_HUB_TOKEN }}"
